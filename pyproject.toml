[tool.poetry]
name = "acidrain-logging"
version = "0.1.0"
description = "Common logging library"
authors = ["Mathieu Lemay <acidrain1@gmail.com>"]
license = "MIT"
readme = "README.md"
include = ["acidrain_logging/py.typed"]

[tool.poetry.dependencies]
python = "^3.7"
orjson = "^3.9.6"
pydantic = "^1.10"
structlog = "^23.1.0"

# extra=fastapi
fastapi = {version = "^0.103.1", optional = true}
uvicorn = {version = "^0.22.0", optional = true}

# extra=datadog
datadog = {version = "^0.47.0", optional = true}
ddtrace = {version = "^1.20.1", optional = true}

# https://github.com/python/importlib_metadata/issues/411
importlib-metadata = { version = "^4.0.0", python = "^3.7" }

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.1"
mypy = "^1.4.1"
faker = "^18.13.0"
httpx = "^0.24.1"  # Last version to support py37
pydantic-factories = "^1.15"  # Last version to support py37, switch to polyfactories when moving to py38+
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-docker = "^2.0.1"
pytest-freezer = "^0.4.8"
types-pytz = "^2023.3.0.1"

[tool.poetry.extras]
datadog = ["datadog", "ddtrace"]
fastapi = ["fastapi", "uvicorn"]

[tool.coverage.report]
exclude_lines = [
    "# pragma: no cover",
    "if TYPE_CHECKING:",
]

[tool.mypy]
namespace_packages = true
explicit_package_bases = true
strict = true
show_error_codes = true
plugins = [
    "pydantic.mypy"
]

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests/unit", "tests/module", "tests"]
# Disable anyio to avoid conflict and force asyncio to load before entrypoints
# https://docs.pytest.org/en/6.2.x/writing_plugins.html#plugin-discovery-order-at-tool-startup
addopts = ["-p", "no:anyio", "-p", "asyncio"]
asyncio_mode = "auto"

[tool.ruff]
target-version = "py37"
select = [
    "ALL"
]
ignore = [
    "COM", # flake8-commas
    "FIX", # flake8-fixme
    "TD", # flake8-todos

    "ANN101",  # Missing type annotation for `self` in method
    "ANN102",  # Missing type annotation for `cls` in method
    "D10",  # Missing docstring in ...
    "D211",  # No blank lines allowed before class docstring
    "D212",  # Multi-line docstring summary should start at the first line

    # TODO: Remove when upgrading python past py37
    "FA100", # Missing `from __future__ import annotations`, but uses `typing.*`
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.pep8-naming]
classmethod-decorators = [
    "classmethod",
    "pydantic.validator",
    "pydantic.field_validator",
    "pydantic.model_validator",
    "pydantic.root_validator"
]

[tool.ruff.per-file-ignores]
"tests/*" = [
    "PLR2004", # Magic value used in comparison
    "S101", # Use of `assert` detected
    "S105", # Possible hardcoded password
    "S311", # Standard pseudo-random generators are not suitable for security/cryptographic purposes.
]
"tools/*" = [
    "INP001", # File `...` is part of an implicit namespace package. Add an `__init__.py`.
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
