version: 2.1

orbs:
  aws-cli: circleci/aws-cli@4.0

executors:
  default:
    environment:
      BUILDKIT_PROGRESS: plain
      DOCKER_BUILDKIT: 1
      NO_COLOR: 1  # Disable all coloring for tools that support this
                   # To fix this: https://github.com/python-poetry/poetry/issues/7184
    docker:
      - image: "cimg/python:3.7"

workflows:
  ci:
    jobs:
      - test
      - publish:
          requires:
            - test


jobs:
  test:
    executor: default
    resource_class: small
    steps:
      - checkout
      - restore_cache:
          keys:
            - venv-v1-{{ checksum "poetry.lock" }}
            - venv-v1-
            - venv-
      - restore_cache:
          keys:
            - pre-commit-v1-{{ checksum ".pre-commit-config.yaml" }}
            - pre-commit-v1-
            - pre-commit-
      - run:
          name: Install pre-commit
          command: pip install pre-commit
      - run:
          name: Install project dependencies
          command: make install
      - run:
          name: Run Linters
          command: make lint
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Run Tests
          command: |
            DOCKER_NETWORK_IP=$(docker network inspect bridge | jq -r ".[0].IPAM.Config[0].Gateway")
            export DOCKER_NETWORK_IP
            export PYTEST_ADDOPTS="--junit-xml=test-results/junit.xml"
            make test
      - store_test_results:
          path: test-results
      - save_cache:
          key: venv-v1-{{ checksum "poetry.lock" }}
          paths:
            - "~/.cache/pypoetry/virtualenvs"
      - save_cache:
          key: pre-commit-v1-{{ checksum ".pre-commit-config.yaml" }}
          paths:
            - "~/.cache/pre-commit"

  publish:
    executor: default
    resource_class: small
    steps:
      - checkout
      - run:
          name: Build package
          command: |
            poetry version "$(git describe --always HEAD | sed 's/^v//' | sed 's/-/+/')"
            poetry build
#      - aws-cli/setup:
#          role_arn: "TODO"
#      - run:
#          name: Publish package
#          command: |
#            token="$(aws codeartifact get-authorization-token --domain TODO --query authorizationToken --output text --region TODO)"
#            poetry config http-basic.TODO TODO "${token}"
#            poetry publish
